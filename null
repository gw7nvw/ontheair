select count(id) from crownparks where is_active=true;
select count(id) from crownparks where is_active=false;
\d crownparks
select distinct reserve_purpose from crownparks
;
\d crownparks
select distinct reserve_type from c
\d crownparks
\q
\d crownparks
select distinct section from crownparks
;
\c crownparks
select distinct section from crownparks
;
\q
select count(id) from parks where is_active=false;
select count(id) from parks where is_active=false;
select count(id) from parks where is_active=false;
\c hota_devleopment
\c hota_devlopment
\c hota_development
select count(id) from parks where is_active=false;
\c hota_production
select count(id) from parks where is_active=false;
select count(id) from parks where is_active=false;
\d parks
\q
select * from asset_web_links where id=71
;
select * from asset_web_links where id=71
;
\q
select * from assets where master_cde is not nill;
select * from assets where master_cde is not null;
select * from assets where master_code is not null;
\q
\d assets
exit
\q
\d assets
\d parks
\d assets
\d parks
\d parks
select id, ST_Area("WKT") as area from park order by area;
select id, ST_Area("WKT") as area from parks order by area;
select id, ST_Area(boundary) as area from parks order by area;
select id, ST_Area(boundary) as area from parks order by area desc;
select count(id) from parks where boundary is null;
select count(id) from parks where boundary is null and is_active=true;
select count(id) from assets where asset_type='park' and boundary is null and is_active=true;
select count(id) from assets where asset_type='park';
select count(id) from parks;
\c crownpark
\c crownparks
select count(id) from crownparks;
select count(id) from crownparks where boundary is null and is_active=true;
select count(id) from crownparks where "WKT" is null and is_active=true;
select count(id) from crownparks where "WKT" is null;
\c hota_production
select count(id) from crownparks where boundary is null and is_active=true;
select count(id) from parks where boundary is null and is_active=true;
\q
select count(id) from parks where boundary is null and is_active=true;
select count(id) from parks where boundary is null and is_active=true;
select count(id) from parks where boundary is null and is_active=true;
select count(id) from parks where boundary is null and is_active=true;
select count(id) from parks where boundary is null and is_active=true;
select count(id) from parks where boundary is null and is_active=true;
exit
\q
select count(id) from parks where boundary is null and is_active=true;
exit
\q
\d contact
\d contacts
select * from contacts;
\q
\c hota_development
select asset2_name, asset2_codes from contacts;
select loc2_desc, asset2_codes from contacts;
select loc_desc2, asset2_codes from contacts;
exit
\q
\c hota_development
select loc_desc2, asset2_codes from contacts;
\q
select count(id) from parks where boundary is null and is_active=true;
select count(id) from parks where boundary is null and is_active=true;
\q
select count (id) from regions;
\d regions
exit\
\q
\c hota_development
delete from regions
;
exit
\q
\c hota_development
delete from regions
;
exit
\q
select name from regiopns;
select name from regions;
exit
\q
\q
update assets set old_code=code;
\q
select count(id) from parks where boundary is null and is_active=true;
select name from parks where boundary is null and is_active=true;
select name from parks where boundary is null and is_active=true;
select id,name from parks where boundary is null and is_active=true;
\c crownparks
select * from crownparks where id=2792472;
select id, name from crownparks where id=2792472;
select id, namei,is_active from crownparks where id=2792472;
select id, name,is_active from crownparks where id=2792472;
exit
\q
\l
\d
select * from lakes.public.lakes;
create extension postgres_fdw
;
\c lakes
\c crownparks
\d
\d crownparks
\q
update parks p set boundary=(select "WKT" from crownparks c where c.napalis_id=p.id);
select name from parks where boundary is null and is_active=true;
select count(id) from parks where boundary is null and is_active=true;
select name from parks where boundary is null and is_active=true;
\d parks
exit
\q
select 1||0.2;
select 1.0||0.2;
select null||0.2;
select coalesce(null,0.2);
\Q
\q
select region from parks;
\q
update parks set dist_code='ZLP/SL-0001' where id=2801633;
select dist_code from parks where id=2801633;
exit
\q
\q
update parks set dist_code=null;
\q
\l
\c hota_production_old
\d contacts
\d hota_development
\c hota_development
\d contacts
 select asset1_codes, asset2_codes from contacts;
 select id, callsign1, callsign2, asset1_codes, asset2_codes from contacts;
 select id, callsign1, callsign2, asset1_codes, asset2_codes from contacts;
 select id, callsign1, callsign2, asset1_codes, asset2_codes from contacts order by id;
\c hota_production
select code, old_code from assets;
\q
select id from assets where master_code is not null;
select id from assets where master_code is not null and mastet_code=code;
select id from assets where master_code is not null and master_code=code;
select count(id) from assets where master_code is not null and master_code=code;
select count(id) from assets where master_code is not null and master_code=code;
select count(id) from assets where master_code is not null;
update assets set master_code=null where master_code=code;
select code from assets where master_code is not null;
\q
delete from asset_links ;
exigt
\q
\c hota_production;
select count(id) from parks where name ilike '%gravel%';
select count(id) from parks where name ilike '%gravel%' and is_active=true;
update assets set minor=true where name ilike '%gravel%';
select * from assets where safecide='
ZLP/OT-1149';
select * from assets where code='ZLP/OT-1149';
\c crownparks
select * from crownparks where id=2805937;
select * from assets where code='';
select * from assets where code='';
ZLP/SL-0999
select * from assets where code='LP/SL-0999';
ZLP/SL-0999
select * from assets where code='ZLP/SL-0999';
select * from assets where code='ZLP/SL-0999';
\c hota_production
select * from assets where code='ZLP/SL-0999';
select name, code, old_code from assets where code='ZLP/SL-0999';
\c crownparks
select * from crownparks where id=2801648;
\q
select code, old_code from assets where old_code='ZLP/2795082';
select code, dist_code from parks where code='ZLP/2795082';
select * from parks where dist_code='ZLP/ZZ-0001';
select code,name, dist_code from parks where dist_code='ZLP/ZZ-0001';
select code,name, dist_code from parks where dist_code='ZLP/ZZ-0001' and is_active=true;
select code,name, dist_code from parks where dist_code='ZLP/ZZ-0001' and boundary is not null;
\q
update assets set master_code=null where master_code=code;
delete from asset_links ;
select * from asset_web_links
;
select * from asset_web_links
 where asset_code like 'ZLP%';
select * from asset_web_links
 where asset_code like 'ZLH%';
exit
\q
select minor from assets where code='ZLP/CB-2138';
\q
select ur;l from assets
select url from assets;
select url from assets;
\\q
\q
select count(id) from parks where ST_Area(ST_Transform(boundary,2193))>50000;
select count(id) from parks where ST_Area(ST_Transform(boundary,2193))>100000;
select count(id) from parks where ST_Area(ST_Transform(boundary,2193))>1000000;
update parks set minor=true where ST_Area(ST_Transform(boundary,2193))<100000;
update parks set is_mr=true where ST_Area(ST_Transform(boundary,2193))<100000;
update assets set is_mr=true where asset_type='park' and ST_Area(ST_Transform(boundary,2193))<100000;
update assets set minor=true where asset_type='park' and ST_Area(ST_Transform(boundary,2193))<100000;
\q
\q
\d assets
\q
select distinct category from assets;
exit
\q
select description from assets where code='ZLP/TM-0028';
exit
\q
select id,name from assets where ST_IsValid(boundary)=false;
update assets set boundary=ST_MakeValid(boundary) where id in (select id from assets where ST_IsValid(boundary)=false);
update assets set boundary=st_multi(ST_CollectionExtract(ST_MakeValid(boundary),3)) where id in (select id from assets where ST_IsValid(boundary)=false);
\q
\c lakes
\d lakes
 alter table lakes add column dist_code character varying(255);
\d lakes
q
\q
\c lakes
\d lakes
 alter table lakes add column region character varying(255);
\q
\c lakes
update lakes set dist_code=null;
select dist_code, name, location from lakes;
select dist_code, name, ST_GeomAsText(location) from lakes;
select dist_code, name, ST_AsText(location) from lakes;
\q
\c lakes
update lakes set dist_code=null;
update lakes set region=null;
\q
\c lakes
select region, dist_code, name, ST_AsText(location) from lakes where region is null;
select region, dist_code, name, ST_AsText(location) from lakes where region is null;
update lakes set dist_code=null;
update lakes set region=null;
\q
update lakes set region=null;
\c lakes
update lakes set region=null;
exit
\q
update lakes set region=null;
\c lakes
update lakes set region=null;
\q
select * from contacts where "ZLP/ZZ%" like ANY(asset1_codes);
select * from contacts where 'ZLP/ZZ%' like ANY(asset1_codes);
select * from contacts where 'ZLP/ZZ%' like ANY(asset2_codes);
select * from contacts where 'ZLP/CB%' like ANY(asset2_codes);
select * from contacts where 'ZLP/CB%' like ANY(asset1_codes);
select ST_AsText(asset1_codes) from contacts;
select AsText(asset1_codes) from contacts;
select ArrayToString(asset1_codes) from contacts;
select Array_To_String(asset1_codes) from contacts;
select Array_To_String(asset1_codes,',') from contacts;
select * from contacts where Array_To_String(asset1_codes,',') like '%ZZ%';
select * from contacts where Array_To_String(asset1_codes,',') like '%CB%';
select * from contacts where Array_To_String(asset2_codes,',') like '%ZZ%';
select count(id) from parks where dist_code like '%ZZ%';
\q
select * from assets a inner join parks p on a.old_code=p.code;
select a.code, p.dist_code from assets a inner join parks p on a.old_code=p.code;
select a.code, p.dist_code from assets a inner join parks p on a.old_code=p.code where a.code!=p.dist_code;
select a.code, p.dist_code from assets a inner join parks p on a.old_code=p.code where a.code!=p.dist_code;
exit
\q
select a.code, p.dist_code from assets a inner join parks p on a.old_code=p.code where a.code!=p.dist_code;
select a.code, p.dist_code from assets a inner join parks p on a.old_code=p.code where p.dist_code is null;
exit
\q
select max(id) from parks;
select max(id) from parks where id<9000000;
select min(id) from parks where id<9000000;
\q
select name from parks where region is null;
select name from parks where region is null and location is not null;
select name from parks where region is null and location is not null order by id;
\q
drop database hota_development;
create database hota_development template hota_production;
\q
select ST_Length(boundary) from parks;
select ST_NumPoints(boundary) from parks;
select ST_Area(boundary) from parks;
select sum(ST_Area(boundary)) from parks;
select ST_NPoints(boundary) from parks;
select sum(ST_NPoints(boundary)) from parks;
\q
\c crownparks
update crownparks set is_active=true;
\q
\c crownparks
select count(id) from crownparks where is_active=true;
select id, name from crownparks;
select id, name from crownparks order by id;
delete from crownparks;
exit
\q
\c crownparks
delete from crownparks;
\c hota_production
select * from crownparks;
update crownparks set is_active=true;
ext
exit
\q
SELECT cp2.id from crownparks cp1 inner join crownparks cp2
ON cp2.is_active=true and (cp2.name = cp1.name) and cp2.id != cp1.id and ST_DWithin(cp1."WKT",cp2."WKT", 2, false) where cp1.id=28290;
SELECT cp2.id from crownparks cp1 inner join crownparks cp2
ON cp2.is_active=true and (cp2.name = cp1.name) and cp2.id != cp1.id and ST_DWithin(cp1."WKT",cp2."WKT", 20000, false) where cp1.id=28290;
SELECT cp2.id from crownparks cp1 inner join crownparks cp2
ON cp2.is_active=true and (cp2.name = cp1.name) and cp2.id != cp1.id and ST_DWithin(cp1."WKT",cp2."WKT", 2, false) where cp1.id=28290;
exit
\q
SELECT cp2.id from crownparks cp1 inner join crownparks cp2
ON cp2.is_active=true and (cp2.name = cp1.name) and cp2.id != cp1.id and ST_DWithin(cp1."WKT",cp2."WKT", 2, false) where cp1.id=28290;
select id, name from crownparks where id=28290
;
select ST_IsValid("WKT") from crownparks where id=28290
;
\q
select id from crownparks where ST_IsValid("WKT")=false;
\q
select id from crownparks where ST_IsValid("WKT")=false;
select count(id) from crownparks where ST_IsValid("WKT")=false;
select count(id) from crownparks where ST_IsValid("WKT")=false;
\q
update crownparks set "WKT"=st_multi(ST_CollectionExtract(ST_MakeValid("WKT"),3)) where id in (select id from crownparks where ST_IsValid("WKT")=false);
\q
select count(id) from crownparks where ST_IsValid("WKT")=false;
select name from crownparks whete id=2801610;
select name from crownparks where id=2801610;
select name,ST_Area("WKT") from crownparks where id=2801610;
\q
update crownparks set boundary=nil where id=2801610;
update crownparks set boundary=null where id=2801610;
update crownparks set "WKT"=null where id=2801610;
exit
\q
delete from crownparks;
\q
\c crownparks
\q
delete from crownparks;
copy crownparks from '/home/mbriggs/protected-areas.csv' with (FORMAT csv);
copy crownparks from '/home/mbriggs/protected-areas.csv' DELIMITER ',' CSV HEADER;
copy crownparks(id,WKT,napalis_id,start_date,name,recorded_area,overlays,reserve_type,legislation,section,reserve_purpose,ctrl_mg_vst) from '/home/mbriggs/protected-areas.csv' DELIMITER ',' CSV HEADER;
copy crownparks(id,"WKT",napalis_id,start_date,name,recorded_area,overlays,reserve_type,legislation,section,reserve_purpose,ctrl_mg_vst) from '/home/mbriggs/protected-areas.csv' DELIMITER ',' CSV HEADER;
copy crownparks(id,"WKT",napalis_id,start_date,name,recorded_area,overlays,reserve_type,legislation,section,reserve_purpose,ctrl_mg_vst) from '/home/mbriggs/protected-areas.csv' DELIMITER ',' CSV HEADER SRID=4326;
copy crownparks(id,"WKT",napalis_id,start_date,name,recorded_area,overlays,reserve_type,legislation,section,reserve_purpose,ctrl_mg_vst) from '/home/mbriggs/protected-areas.csv' DELIMITER ',' CSV HEADER; SRID=4326;
:q
\q
copy crownparks(id,"WKT",napalis_id,start_date,name,recorded_area,overlays,reserve_type,legislation,section,reserve_purpose,ctrl_mg_vst) from '/home/mbriggs/protected-areas.csv' DELIMITER ',' CSV HEADER; SRID=4326;
copy crownparks(id,"WKT",napalis_id,start_date,name,recorded_area,overlays,reserve_type,legislation,section,reserve_purpose,ctrl_mg_vst) from '/home/mbriggs/protected-areas.csv' DELIMITER ',' CSV HEADER;
copy crownparks("WKT",napalis_id,start_date,name,recorded_area,overlays,reserve_type,legislation,section,reserve_purpose,ctrl_mg_vst) from '/home/mbriggs/protected-areas.csv' DELIMITER ',' CSV HEADER;
\q
select count(id) from crownparks where ST_IsValid("WKT")=false;
\q
update crownparks set is_valid=true;
\dt
\d crownparks
update crownparks set is_active=true;
select count(id) from crownparks where ST_IsValid("WKT")=false;
\q
\q
select count(id) from crownparks where ST_IsValid("WKT")=false;
select * from crownparks where id=28711;
select id,name,ST_Area('WKT') from crownparks where id=28711;
select id,name,ST_Area("WKT") from crownparks where id=28711;
\q
select count(id) from crownparks where ST_IsValid("WKT")=false;
\q
select count(id) from crownparks where ST_IsValid("WKT")=false;
select count(id) from crownparks where ST_IsValid("WKT")=false;
select count(id) from crownparks where ST_IsValid("WKT")=false;
select count(id) from crownparks where ST_IsValid("WKT")=false;
\q
select count(id) from parks where is_active=true;
select count(id) from parks where is_active=true;
select count(id) from parks where is_active=true;
select count(id) from crownparks where is_active=true;
select count(id) from parks where is_active=true;
select count(id) from parks where is_active=true;
select count(id) from parks where is_active=true;
select count(id) from parks where is_active=true;
select count(id) from parks where is_active=true;
select count(id) from parks where is_active=true;
select count(id) from parks where is_active=true;
select count(id) from parks where is_active=true;
\q
\c crownparks
copy crownparks("WKT",napalis_id,start_date,name,recorded_area,overlays,reserve_type,legislation,section,reserve_purpose,ctrl_mg_vst) from '/home/mbriggs/protected-areas.csv' DELIMITER ',' CSV HEADER;
\q
\c crownparks
\d crownparks
\q
create database hota_development with template hota_production;
\q
update islands set dist_code=null;
\q
select region from islands,
;
select region from islands
;
\q
select region from islands,
;
select region from islands
;
select count(id), distinct region from islands
;
select count(id), region from islands group by region
;
select count(id), region from islands group by region
;
select count(id), region from islands group by region
;
select count(id), region from islands group by region
;
\q
update islands set dist_code=null;
\q
select count(id), region from islands group by region
;
select count(id), region from islands group by region
;
select count(id), region from islands group by region
;
select count(id), region from islands group by region
;
select count(id), region from islands group by region
;
select count(id), region from islands group by region
;
\q
select count(id), region from islands group by region
;
select count(id), region from islands group by region
;
select count(id), region from islands group by region
;
select count(id), region from islands group by region
;
select count(id), region from islands group by region
;
select count(id), region from islands group by region
;
\q
update islands set dist_code=null;
select count(id), region from islands group by region
;
\q
select count(id) from islands where region is null;
exit
\q
update islands set dist_code=null;
\q
select count(id) from islands where region is null;
select count(id), region from islands group by region
;
select name, dist_code from islands;
select name, dist_code from islands order by name;
\q
update assets a set code=(select dist_code from islands i where i.code = a.code) where asset_type='island';
\q
\q
delete from asset_links;
exit
\q
\d huts
q\
\q
\d huts
q
\q
select * from huts where region is null;
select count(id) from huts where region is null;
\q
update assets a set code=(select dist_code from huts i where i.code = a.code) where asset_type='hut';
exit
\q
delete from asset_links;
\q
delete from asset_links;
\q
select * from sessions order by updated_at desc;
select * from sessions order by updated_at desc;
select * from user order by updated_at;
select * from users order by updated_at;
select callsign from users order by updated_at;
select callsign from users order by updated_at desc;
\q
select * from contacts where callsign1='ZL2ATH';
select asset1_codes, asset2_codes from contacts where callsign1='ZL2ATH';
:q
q\q
select * from contacts where id=526;
select * from users where id=332;
select * from contacts where id=526;
select * from contacts where 'dummy'=ANY(asset1_codes)
;
select * from contacts where 'dummy'=ANY(asset2_codes)
;
\q
\q
update contacts set asset2_codes=[] where asset2_codes={'dummy'};
update contacts set asset2_codes=null where asset2_codes={'dummy'};
update contacts set asset2_codes=null where 'dummy'=ANY(asset2_codes);
select * from contacts where 'dummy'=ANY(asset1_codes)
;
\q
select * from contacts where asset1_codes i\s null; 
;
