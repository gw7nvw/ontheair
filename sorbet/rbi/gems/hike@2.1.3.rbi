# DO NOT EDIT MANUALLY
# This is an autogenerated file for types exported from the `hike` gem.
# Please instead update this file by running `tapioca generate`.

# typed: true

module Hike
end

class Hike::CachedTrail
  include(::Hike::FileUtils)

  def initialize(root, paths, extensions, aliases); end

  def aliases; end
  def cached; end
  def entries(path); end
  def extensions; end
  def find(*logical_paths); end
  def find_all(*logical_paths, &block); end
  def index; end
  def paths; end
  def root; end
  def stat(path); end

  protected

  def extract_options!(arguments); end
  def find_in_base_path(logical_path, base_path, &block); end
  def find_in_paths(logical_path, &block); end
  def match(dirname, basename); end
  def paths_contain?(dirname); end
  def pattern_for(basename); end
  def relative?(path); end
  def sort_matches(matches, basename); end
end

class Hike::Extensions < ::Hike::NormalizedArray
  def normalize_element(extension); end
end

module Hike::FileUtils
  extend(::Hike::FileUtils)

  def entries(path); end
  def stat(path); end
end

class Hike::NormalizedArray < ::Array
  def initialize; end

  def <<(element); end
  def []=(*args); end
  def collect!; end
  def insert(index, *elements); end
  def map!; end
  def normalize_elements(elements); end
  def push(*elements); end
  def replace(elements); end
  def unshift(*elements); end
end

class Hike::Paths < ::Hike::NormalizedArray
  def initialize(root = T.unsafe(nil)); end

  def normalize_element(path); end
end

class Hike::Trail
  include(::Hike::FileUtils)

  def initialize(root = T.unsafe(nil)); end

  def alias_extension(new_extension, old_extension); end
  def aliases; end
  def append_extension(*extensions); end
  def append_extensions(*extensions); end
  def append_path(*paths); end
  def append_paths(*paths); end
  def cached; end
  def extensions; end
  def find(*args); end
  def find_all(*args, &block); end
  def index; end
  def paths; end
  def prepend_extension(*extensions); end
  def prepend_extensions(*extensions); end
  def prepend_path(*paths); end
  def prepend_paths(*paths); end
  def remove_extension(extension); end
  def remove_path(path); end
  def root; end
  def unalias_extension(extension); end

  private

  def normalize_extension(extension); end
end

Hike::VERSION = T.let(T.unsafe(nil), String)
