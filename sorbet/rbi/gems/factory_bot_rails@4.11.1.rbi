# DO NOT EDIT MANUALLY
# This is an autogenerated file for types exported from the `factory_bot_rails` gem.
# Please instead update this file by running `tapioca generate`.

# typed: true

module FactoryBot
  extend(::FactoryBot::Syntax::Methods)
  extend(::FactoryBot::Syntax::Default)

  class << self
    def aliases; end
    def aliases=(_); end
    def aliases_for(attribute); end
    def allow_class_lookup(*args, &block); end
    def allow_class_lookup=(arg); end
    def callback_names(*args, &block); end
    def callbacks(*args, &block); end
    def configuration; end
    def constructor(*args, &block); end
    def definition_file_paths; end
    def definition_file_paths=(_); end
    def duplicate_attribute_assignment_from_initialize_with(*args, &block); end
    def duplicate_attribute_assignment_from_initialize_with=(arg); end
    def factories(*args, &block); end
    def factory_by_name(name); end
    def find_definitions; end
    def initialize_with(*args, &block); end
    def lint(*args); end
    def register_callback(name); end
    def register_default_callbacks; end
    def register_default_strategies; end
    def register_factory(factory); end
    def register_sequence(sequence); end
    def register_strategy(strategy_name, strategy_class); end
    def register_trait(trait); end
    def reload; end
    def reset_configuration; end
    def rewind_sequences; end
    def sequence_by_name(name); end
    def sequences(*args, &block); end
    def skip_create(*args, &block); end
    def strategies(*args, &block); end
    def strategy_by_name(name); end
    def to_create(*args, &block); end
    def trait_by_name(name); end
    def traits(*args, &block); end
    def use_parent_strategy(*args, &block); end
    def use_parent_strategy=(arg); end
  end
end

class FactoryBot::Railtie < ::Rails::Railtie
end

FactoryBot::VERSION = T.let(T.unsafe(nil), String)

module FactoryBotRails
end

class FactoryBotRails::Generator
  def initialize(config); end

  def factory_bot_disabled?; end
  def generator; end
  def rails_options; end
  def run; end
  def test_framework; end
end

module FactoryBotRails::Generators
end

class FactoryBotRails::Generators::NonRSpecGenerator
  def initialize(generators); end

  def run; end

  private

  def test_framework; end
end

class FactoryBotRails::Generators::NullGenerator
  def initialize(generators); end

  def run; end
end

class FactoryBotRails::Generators::RSpecGenerator
  def initialize(generators); end

  def run; end

  private

  def factory_bot_directory; end
  def fixture_replacement_setting; end
end
